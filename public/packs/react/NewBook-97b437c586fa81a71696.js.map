{"version":3,"file":"react/NewBook-97b437c586fa81a71696.js","sources":["webpack:///webpack/bootstrap fd057042d165d6d54eac","webpack:///app/javascript/packs/react/NewBook.es6.jsx"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd057042d165d6d54eac","class NewBook extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      video_description: '',\n      description: '',\n      isInputVideo: false,\n      hasVideoDescription: false,\n      source_language: '',\n      target_language: '',\n      errors: [],\n      stream: '',\n      isVideoRecording: false,\n      isDescriptionPlaying: false,\n    };\n    this.onCloseVideoComponent = this.onCloseVideoComponent.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDescriptionVideoSubmit = this.onDescriptionVideoSubmit.bind(this)\n    this.onToggleInputType = this.onToggleInputType.bind(this);\n    this.onSaveStream = this.onSaveStream.bind(this);\n    this.onStopStream = this.onStopStream.bind(this);\n    this.onClearStream = this.onClearStream.bind(this);\n    this.onStartRecordingClick = this.onStartRecordingClick.bind(this);\n    this.onStopRecordingClick = this.onStopRecordingClick.bind(this);\n    this.onRenderVideoInput = this.onRenderVideoInput.bind(this);\n    this.playButton = this.playButton.bind(this);\n    this.pauseButton = this.pauseButton.bind(this);\n    this.onDeleteVideoDescription = this.onDeleteVideoDescription.bind(this);\n  }\n\n  onInputChange(e) {\n    const newState = this.state;\n    newState[e.target.name] = e.target.value;\n    this.setState(newState);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.state.errors = [];\n    if (this.state.title && this.state.source_language && this.state.target_language) {\n      $.ajax({\n        url: '/books',\n        type: 'POST',\n        data: {\n          book: this.state,\n        },\n        success(book) {\n          window.location.href = '/books/' + book.id;\n        },\n        error(error) {\n          printErrors(error);\n        },\n      });\n    } else {\n      if (!this.state.title) this.state.errors.push(' Title');\n      if (!this.state.source_language) this.state.errors.push(' Source language');\n      if (!this.state.target_language) this.state.errors.push(' Target language');\n      bootbox.alert({\n        message: 'Your book is missing the following required details:' + (this.state.errors),\n        closeButton: false,\n      });\n    }\n  }\n\n  onRenderVideoInput() {\n    if (this.state.isInputVideo) {\n      const video = document.getElementById('camera-stream');\n      video.muted = true;\n      const self = this;\n\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      }\n\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = (constraints) => {\n          const getUserMedia = (navigator.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia);\n\n          if (!getUserMedia) {\n            self.onCloseVideoComponent();\n            alert('Sorry, your browser does not support the video recording.\\n(In order to access the video recording, try again with one of these browsers: Chrome, Firefox, Edge, Opera.)');\n            return Promise.reject(new Error('getUserMedia is not implemented in this browser'));\n          }\n          return new Promise((resolve, reject) => {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n      navigator.mediaDevices.getUserMedia({ audio: true, video: true })\n      .then((stream) => {\n        self.onSaveStream(stream);\n        video.controls = false;\n        video.src = window.URL.createObjectURL(stream);\n      })\n      .catch((err) => {\n        console.log(err.name + \": \" + err.message);\n      });\n    }\n  }\n\n  onSaveStream(stream) {\n    this.setState({stream: stream});\n  }\n\n  onStopRecordingClick() {\n    this.setState({ isVideoRecording: !this.state.isVideoRecording, hasVideoDescription: true });\n  }\n\n  onStartRecordingClick() {\n    this.setState({ isVideoRecording: !this.state.isVideoRecording });\n  }\n\n  onToggleInputType() {\n    this.setState({ isInputVideo: !this.state.isInputVideo });\n  }\n\n  onCloseVideoComponent() {\n    this.setState({\n      isVideoRecording: false,\n      isInputVideo: false\n    });\n    if (this.state.stream !== '') {\n      this.onStopStream();\n    }\n  }\n\n  onStopStream() {\n    const tracks = this.state.stream.getTracks();\n    tracks[0].stop();\n    tracks[1].stop();\n    this.onClearStream();\n  }\n\n  onClearStream() {\n    this.setState({stream: ''});\n  }\n\n  onDescriptionVideoSubmit(video) {\n    this.setState({ video_description: video });\n  }\n\n  renderVideoDescription() {\n    if(this.state.isInputVideo == false) {\n      if(this.state.hasVideoDescription) {\n        return <div className=\"videoDescription\"><div className=\"videoComponent\"><video src={this.state.video_description} loop width=\"600\"></video>{this.renderPlayButton()}</div></div>\n      } else {\n        return <button type=\"button\" title=\"Add a video\" onClick={this.onToggleInputType} className=\"addVideoButton\">Add a video introduction</button>\n      }\n    } else {\n      return(\n        <div className=\"videoDescription\" ref=\"video\">\n          <Video\n            onRenderVideoInput={this.onRenderVideoInput}\n            renderRecordButton={this.renderRecordButton}\n            onCancelEditPhrase={this.onCancelEditPhrase}\n            onCloseVideoComponent={this.onCloseVideoComponent}\n            onStartRecordingClick={this.onStartRecordingClick}\n            onStopRecordingClick={this.onStopRecordingClick}\n            onSourceVideoSubmit={this.onDescriptionVideoSubmit}\n            onTargetVideoSubmit={this.onTargetVideoSubmit}\n            onToggleInputType={this.onToggleInputType}\n            onClearStream={this.onClearStream}\n            closeAlt={this.props.closeAlt}\n            isVideoRecording={this.state.isVideoRecording}\n            isInputVideo={this.state.isInputVideo}\n            onSaveStream={this.onSaveStream}\n            onStopStream={this.onStopStream}\n            mediaConstraints={this.state.mediaConstraints}\n            stream={this.state.stream}\n            isTargetInputActive={this.state.isTargetInputActive}\n            sourceLanguage={this.props.sourceLanguage}\n            targetLanguage={this.props.targetLanguage}\n            author={this.props.currentUser.username}\n            width={600}\n            videoPhrase={false}\n          />\n        </div>\n      )\n    }\n  }\n\n  renderPlayButton() {\n    if(this.state.isDescriptionPlaying) {\n      return (\n        <div className=\"videoControls\">\n          <button className=\"play descriptionVideoPause\" type=\"button\" onClick={this.pauseButton} title=\"Pause\">\n              <img src={this.props.pause}/>\n          </button>\n          <button type=\"button\" title=\"Remove video\" onClick={this.onDeleteVideoDescription} className=\"text icon\">\n            <img src={this.props.deleteAlt} alt=\"close\" />\n          </button>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"videoControls\">\n          <button type=\"button\" onClick={this.playButton} title=\"Play\" className=\"play\">\n            <img src={this.props.play}/>\n          </button>\n          <button type=\"button\" title=\"Remove video\" onClick={this.onDeleteVideoDescription} className=\"text icon\">\n            <img src={this.props.deleteAlt} alt=\"close\" />\n          </button>\n        </div>\n      )\n    }\n  }\n\n  onDeleteVideoDescription() {\n    this.setState({video_description:\"\", hasVideoDescription:false})\n  }\n\n  playButton() {\n    this.setState({isDescriptionPlaying:!this.state.isDescriptionPlaying})\n    $(\"video\")[0].play()\n  }\n\n  pauseButton() {\n    this.setState({isDescriptionPlaying:!this.state.isDescriptionPlaying})\n    $(\"video\")[0].pause()\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          logo={this.props.logo}\n          detail={this.props.detail}\n          search={this.props.search}\n          menu={this.props.menu}\n        />\n        <span className=\"backgroundElement\" />\n        <div className=\"book\">\n          <form onSubmit={this.onSubmit}>\n            <fieldset className=\"tools\">\n              <span title=\"Favorite\"className=\"icon\">\n                <img src={this.props.unstar} alt=\"Favorite\" />\n              </span>\n              <section className=\"cardinality\">\n                <section>\n                  <input\n                    className=\"new language source\"\n                    type=\"text\"\n                    name=\"source_language\"\n                    placeholder=\"Source language\"\n                    value={this.state.sourceLanguage}\n                    onChange={this.onInputChange}\n                  />\n                  <img src={this.props.cardinality} alt=\"\" />\n                  <input\n                    className=\"new language target\"\n                    type=\"text\"\n                    name=\"target_language\"\n                    placeholder=\"Target language\"\n                    value={this.state.targetLanguager}\n                    onChange={this.onInputChange}\n                  />\n                </section>\n              </section>\n              {/* <button title=\"Menu\" className=\"more icon\">\n                <img src={this.props.menuAlt}/>\n              </button> */}\n              <span title=\"Menu\" className=\"icon\">\n                <img src={this.props.menuAlt} />\n              </span>\n            </fieldset>\n            <fieldset className=\"info\">\n              <div className=\"wrapper\">\n                <input\n                  className=\"new title\"\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Useful phrases in Laputa\"\n                  dir=\"auto\"\n                  autoFocus\n                  value={this.state.title}\n                  onChange={this.onInputChange}\n                />\n                <p className=\"new author\">{this.props.currentUser.username}</p>\n                <div className=\"descriptionArea\">\n                  {/*<div className=\"descriptionOptions\">\n                              <button type=\"button\" title=\"Text\" className=\"text icon selectedInput\"><img src={this.props.textIcon} alt=\"text\"/></button>\n                              <button type=\"button\" title=\"Video\" onClick={this.onToggleInputType} className=\"video icon\"><img src={this.props.videoIcon} alt=\"video\"/></button>\n                            </div>*/}\n                  {this.renderVideoDescription()}\n                  <textarea\n                    rows=\"3\"\n                    className=\"new description\"\n                    type=\"text\"\n                    name=\"description\"\n                    dir=\"auto\"\n                    placeholder=\"Describe the contents of your book, Ex: A\n                    collection of useful phrases in Laputa, a Swiftian language\n                    spoken in Balnibarbi and a number of other islands.\"\n                    value={this.state.description}\n                    onChange={this.onInputChange}\n                  />\n                </div>\n              </div>\n            </fieldset>\n            <section className=\"new dictionary\">\n              <DummyContent />\n              <button className=\"startBook\" type=\"submit\">Create Book</button>\n            </section>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nNewBook.propTypes = {\n  currentUser: React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    email: React.PropTypes.string,\n    favorite_books: React.PropTypes.array,\n    id: React.PropTypes.number,\n    username: React.PropTypes.string,\n  }),\n  logo: React.PropTypes.string,\n  detail: React.PropTypes.string,\n  search: React.PropTypes.string,\n  unstar: React.PropTypes.string,\n  cardinality: React.PropTypes.string,\n  menuAlt: React.PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/packs/react/NewBook.es6.jsx"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;;;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5BA;AA6BA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AADA;AA4BA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AASA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAJA;AASA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAVA;AADA;AAwBA;AAAA;AAAA;AACA;AADA;AA5BA;AAgCA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAVA;AANA;AAZA;AADA;AAkCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAnEA;AADA;AATA;AAqFA;;;;AAxTA;AACA;AA0TA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;A","sourceRoot":""}