{"version":3,"file":"react/PhrasePair-a9774b1f80d51fb250a0.js","sources":["webpack:///webpack/bootstrap fd057042d165d6d54eac","webpack:///app/javascript/packs/react/PhrasePair.es6.jsx"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 37);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd057042d165d6d54eac","class PhrasePair extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditingPhrase: false,\n      sourcePhrase: this.props.initialSourcePhrase,\n      targetPhrase: this.props.initialTargetPhrase,\n      isSourceVideoLoading: false,\n      isTargetVideoLoading: false,\n    };\n    this.toggleEditingPhraseState = this.toggleEditingPhraseState.bind(this);\n    this.cancelEditingPhraseState = this.cancelEditingPhraseState.bind(this);\n    this.onDeletePhraseClick = this.onDeletePhraseClick.bind(this);\n    this.onSavePhraseClick = this.onSavePhraseClick.bind(this);\n    this.onInvertPhraseClick = this.onInvertPhraseClick.bind(this);\n    this.onEditPhraseClick = this.onEditPhraseClick.bind(this);\n    this.onSourceChange = this.onSourceChange.bind(this);\n    this.onTargetChange = this.onTargetChange.bind(this);\n    this.renderPhraseMenu = this.renderPhraseMenu.bind(this);\n    this.renderPhrasePair = this.renderPhrasePair.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      sourcePhrase: nextProps.initialSourcePhrase,\n      targetPhrase: nextProps.initialTargetPhrase,\n    });\n  }\n\n  toggleEditingPhraseState() {\n    this.setState({ isEditingPhrase: !this.state.isEditingPhrase });\n  }\n\n  cancelEditingPhraseState(e) {\n    e.preventDefault();\n    this.setState({\n      sourcePhrase: this.props.initialSourcePhrase,\n      targetPhrase: this.props.initialTargetPhrase,\n      isEditingPhrase: false,\n    });\n  }\n\n  onDeletePhraseClick() {\n    this.props.onDeletePhrasePair(this.props.id);\n  }\n\n  onSavePhraseClick(e) {\n    e.preventDefault();\n    if (this.state.sourcePhrase && this.state.targetPhrase) {\n      $.ajax({\n        url: '/phrase_pairs/' + this.props.id,\n        type: 'PUT',\n        data: {\n          phrase_pair: {\n            source_phrase: this.state.sourcePhrase,\n            target_phrase: this.state.targetPhrase,\n          },\n        },\n        success: function () {\n          this.props.onSaveEditPhrase(this.props.id, this.state.sourcePhrase, this.state.targetPhrase);\n          this.toggleEditingPhraseState();\n        }.bind(this),\n        error() {\n          console.log('Error: Could not save phrase');\n        },\n      });\n    } else {\n      if (this.state.sourcePhrase) {\n        bootbox.alert({\n          message: 'Target phrase is empty',\n          closeButton: false,\n        });\n      } else {\n        bootbox.alert({\n          message: 'Source phrase is empty',\n          closeButton: false,\n        });\n      }\n    }\n  }\n\n  onInvertPhraseClick(e) {\n    e.preventDefault();\n    this.setState({\n      sourcePhrase: this.state.targetPhrase,\n      targetPhrase: this.state.sourcePhrase,\n    });\n  }\n\n  onEditPhraseClick() {\n    this.toggleEditingPhraseState();\n  }\n\n  onSourceChange(e) {\n    this.setState({ sourcePhrase: e.target.value });\n  }\n\n  onTargetChange(e) {\n    this.setState({ targetPhrase: e.target.value });\n  }\n\n  renderVideoLoader() {\n    return (\n      <span className=\"loader\">\n        <span><span></span></span>\n        <span><span></span></span>\n        <span><span></span></span>\n      </span>\n    );\n  }\n\n  renderSourceVideo(src) {\n    if (this.state.isSourceVideoLoading !== false) {\n      setTimeout(() => {\n        this.setState({ isSourceVideoLoading: false });\n      }, 10000);\n    }\n\n    if (false) {\n      return (\n        <div className=\"video\">\n          {this.renderVideoLoader()}\n        </div>\n      );\n    }\n    return (\n      <div className=\"video\">\n        {this.renderVideo(src)}\n      </div>\n    );\n  }\n\n  renderTargetVideo(src) {\n    if (this.state.isTargetVideoLoading !== false) {\n      setTimeout(() => {\n        this.setState({ isTargetVideoLoading: false });\n      }, 10000);\n    }\n\n    if (false) {\n      return (\n        <div className=\"video\">\n          {this.renderVideoLoader()}\n        </div>\n      );\n    }\n    return (\n      <span>\n        <div className=\"video\">\n          {this.renderVideo(src)}\n        </div>\n      </span>\n    );\n  }\n\n  renderVideo(src) {\n    return <video src={src} controls loop></video>\n  }\n\n  renderSourceInput(status, src) {\n    if(status) {\n      return <div className=\"video\"><video src={this.state.sourcePhrase}></video></div>\n    } else {\n      return (\n        <input\n          value={this.state.sourcePhrase}\n          onChange={this.onSourceChange}\n          name=\"sourcePhrase\"/>\n      );\n    }\n  }\n\n  renderTargetInput(status, src) {\n    if(status) {\n      return <div className=\"video\"><video src={this.state.targetPhrase}></video></div>\n    } else {\n      return (\n        <input\n          value={this.state.targetPhrase}\n          onChange={this.onTargetChange}\n          name=\"targetPhrase\"/>\n      );\n    }\n  }\n\n\n  renderPhraseMenu() {\n    if (this.props.isOwnedByCurrentUser && this.props.id) {\n      if (this.state.isEditingPhrase) {\n        return (\n          <li className=\"menu saving\">\n            <button title=\"Flip\" onClick={this.onInvertPhraseClick} className=\"icon\">\n              <img src={this.props.flip} />\n            </button>\n            <button title=\"Save\" onClick={this.onSavePhraseClick} className=\"icon\">\n              <img src={this.props.save} />\n            </button>\n            <button title=\"Cancel\" onClick={this.cancelEditingPhraseState} className=\"close icon\">\n              <img src={this.props.close} />\n            </button>\n          </li>\n        );\n      }\n      return (\n        <li className=\"menu\">\n          <button title=\"Menu\" className=\"more icon\">\n            <img src={this.props.menu} />\n          </button>\n          <button title=\"Edit\" onClick={this.onEditPhraseClick} className=\"icon\">\n            <img src={this.props.edit} />\n          </button>\n          <button title=\"Delete\" onClick={this.onDeletePhraseClick} className=\"icon\">\n            <img src={this.props.delete} />\n          </button>\n        </li>\n      );\n    }\n  }\n\n  renderParagraph(text) {\n    if (text) {\n      return (\n        <p>{text}</p>\n      );\n    }\n    return (\n      <p>\n        <Progress/>\n      </p>\n    );\n  }\n\n  renderPhrasePair() {\n    if (this.state.isEditingPhrase) {\n      return (\n        <ul>\n          <form onSubmit={this.onSavePhraseClick}>\n            <li className=\"source\">\n              {\n                this.state.sourcePhrase.startsWith('https://s3.amazonaws.com/poly-video-uploads-dev/') ?\n                  this.renderSourceInput(true)\n                  :\n                  this.renderSourceInput(false)\n              }\n            </li>\n            <li className=\"target\">\n              {\n                this.state.targetPhrase && this.state.targetPhrase.startsWith('https://s3.amazonaws.com/poly-video-uploads-dev/') ?\n                  this.renderTargetInput(true)\n                  :\n                  this.renderTargetInput(false)\n              }\n            </li>\n            { this.renderPhraseMenu() }\n          </form>\n        </ul>\n      );\n    } else {\n      // Checks whether the source phrase or the target phrase is a video and renders video or a paragraph accordingly\n      return (\n        <ul>\n          <li className=\"source\">\n            {\n              this.state.sourcePhrase.startsWith('https://s3.amazonaws.com/poly-video-uploads-dev/') ?\n                this.renderSourceVideo(this.state.sourcePhrase)\n                :\n                this.renderParagraph(this.state.sourcePhrase)\n            }\n          </li>\n          <li className=\"target\">\n            {\n              this.state.targetPhrase && this.state.targetPhrase.startsWith('https://s3.amazonaws.com/poly-video-uploads-dev/') ?\n                this.renderTargetVideo(this.state.targetPhrase)\n                :\n                this.renderParagraph(this.state.targetPhrase)\n            }\n          </li>\n          { this.renderPhraseMenu() }\n        </ul>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <li className=\"entry\">\n        { this.renderPhrasePair() }\n      </li>\n    );\n  }\n}\n\nPhrasePair.propTypes = {\n  initialSourcePhrase: React.PropTypes.string,\n  initialTargetPhrase: React.PropTypes.string,\n  onDeletePhrasePair: React.PropTypes.func,\n  id: React.PropTypes.number,\n  isOwnedByCurrentUser: React.PropTypes.bool,\n  flip: React.PropTypes.string,\n  save: React.PropTypes.string,\n  close: React.PropTypes.string,\n  menu: React.PropTypes.string,\n  edit: React.PropTypes.string,\n  delete: React.PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/packs/react/PhrasePair.es6.jsx"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AADA;AAMA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAPA;AAYA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AACA;AADA;AAPA;AAYA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAFA;AAQA;AAAA;AAAA;AAEA;AAFA;AAQA;AAjBA;AADA;AAsBA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAFA;AAQA;AAAA;AAAA;AAEA;AAFA;AAQA;AAjBA;AAoBA;AACA;;;AAEA;AACA;AACA;AAAA;AACA;AADA;AAIA;;;;AAlSA;AACA;AAoSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;;;;A","sourceRoot":""}