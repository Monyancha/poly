{"version":3,"file":"react/Profile-383eedc308724777bcef.js","sources":["webpack:///webpack/bootstrap fd057042d165d6d54eac","webpack:///app/javascript/packs/react/Profile.es6.jsx"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap fd057042d165d6d54eac","class Profile extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingFavorites: false,\n      showingBooks: true,\n      books: this.props.books,\n      requestMoreBooksSent: false,\n      pageNumber: 2,\n      dashHeight: 0,\n    };\n    this.renderAllBooks = this.renderAllBooks.bind(this);\n    this.renderAuthoredBooks = this.renderAuthoredBooks.bind(this);\n    this.renderFavoriteBooks = this.renderFavoriteBooks.bind(this);\n    this.currentUserProfile = this.currentUserProfile.bind(this);\n    this.toggleShowFavorites = this.toggleShowFavorites.bind(this);\n    this.toggleShowBooks = this.toggleShowBooks.bind(this);\n    this.toggleShowAll = this.toggleShowAll.bind(this);\n    this.renderCreateBookButton = this.renderCreateBookButton.bind(this);\n    this.renderDashboardList = this.renderDashboardList.bind(this);\n    this.renderEditButton = this.renderEditButton.bind(this);\n    this.renderUserContent = this.renderUserContent.bind(this);\n    this.loadMoreBooksOnScroll = this.loadMoreBooksOnScroll.bind(this);\n    this.loadMoreBooks = this.loadMoreBooks.bind(this);\n    this.loadBooksRequest = this.loadBooksRequest.bind(this);\n    this.renderBookLoader = this.renderBookLoader.bind(this);\n  }\n\n  componentDidMount(){\n    window.addEventListener('scroll', this.loadMoreBooksOnScroll);\n  }\n\n  loadMoreBooksOnScroll(){\n    const dashHeight = this.divElement.clientHeight;\n    this.setState({ dashHeight });\n\n    var yPosition = (document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n    var clientHeight = document.documentElement.clientHeight || window.innerHeight; // height of client window\n    var scrolledToBottom = yPosition >= dashHeight - Math.ceil(clientHeight*1.3); // begins load when content is 1/3 of the client height below the screen\n\n    if (scrolledToBottom) {\n      this.loadMoreBooks();\n    }\n  }\n\n  loadMoreBooks(){\n    if (this.state.requestMoreBooksSent) {\n      return;\n    }\n\n    setTimeout(this.loadBooksRequest, 1000);\n\n    this.setState({requestMoreBooksSent: true});\n  }\n\n  loadBooksRequest(){\n    var relative_path = window.location.href\n    cut_path_with_slashes = relative_path.split(\"/\");\n    URL =  cut_path_with_slashes[0] + \"//\" + cut_path_with_slashes[2];\n    $.ajax({\n      url: URL + \"/books/show_more\",\n      data: {page: this.state.pageNumber},\n      method: \"GET\",\n      success: function(data, textStatus, jqXHR) {\n        if(data.length > 0){\n            books = this.state.books.concat(data);\n            pageNumber = this.state.pageNumber;\n            pageNumber = pageNumber + 1;\n            this.setState({\n              books: books,\n              requestMoreBooksSent: false,\n              pageNumber: pageNumber\n            });\n        }else{\n          this.setState({\n            requestMoreBooksSent: false\n          });\n        }\n      }.bind(this),\n      error: function(jqXHR, textStatus, errorThrown) {\n        this.requestMoreBooksSent = false;\n      }.bind(this)\n    });\n  }\n\n  renderAllBooks() {\n    return this.state.books.map((book) => {\n      return (\n        <BookEntry\n          book={book}\n          key={book.id}\n          cardinality={this.props.cardinality}\n          phrase={this.props.phrase}\n        />\n      );\n    });\n  }\n\n  renderAuthoredBooks() {\n    if (this.props.authoredBooks.length > 0) {\n      return this.props.authoredBooks.map((book) => {\n        return (\n          <BookEntry\n            book={book}\n            key={book.id}\n            cardinality={this.props.cardinality}\n            phrase={this.props.phrase}\n          />\n        );\n      });\n    } else {\n      if (!this.currentUserProfile()) {\n        if (this.props.currentUser) {\n          return (\n            <li className=\"emptyList\">\n              <p>You haven't created any books yet.<a href=\"/books/new\">Create your first book</a></p>\n            </li>\n          );\n        } else {\n          return (\n            <li className=\"emptyList\">\n              <p>{this.props.userData.username} does not have any books.</p>\n            </li>\n          );\n        }\n      } else {\n        return (\n          <li className=\"emptyList\">\n            <p>{this.props.userData.username} does not have any books.</p>\n          </li>\n        );\n      }\n    }\n  }\n\n  renderFavoriteBooks() {\n    if (this.props.favorites.length > 0) {\n      return this.props.favorites.map((book) => {\n        return (\n          <BookEntry\n            user={this.props.userData}\n            book={book}\n            key={book.id}\n            cardinality={this.props.cardinality}\n            phrase={this.props.phrase}\n          />\n        );\n      });\n    }\n    return (\n      <li className=\"emptyList\">\n        <p>\n          <span className=\"prompt\">Your favorite books will show up here.</span>\n          Click on a star <img src={this.props.unstar} name=\"unlit\"></img> to favorite a book <img src={this.props.star} name=\"shine\">.</img>\n        </p>\n      </li>\n    );\n  }\n\n  currentUserProfile() {\n    if (this.props.currentUser) {\n      return this.props.userData.id != this.props.currentUser.id;\n    }\n  }\n\n  toggleShowFavorites() {\n    this.setState({\n      showingAll: false,\n      showingFavorites: true,\n      showingBooks: false,\n    });\n  }\n\n  toggleShowBooks() {\n    this.setState({\n      showingAll: false,\n      showingFavorites: false,\n      showingBooks: true,\n    });\n  }\n\n  toggleShowAll() {\n    this.setState({\n      showingAll: true,\n      showingFavorites: false,\n      showingBooks: false,\n    });\n  }\n\n  renderCreateBookButton() {\n    if (!this.currentUserProfile()) {\n      if (this.props.currentUser) {\n        return (\n          <a href=\"/books/new\" className=\"newBook\" title=\"Create a new book\">+</a>\n        );\n      }\n    }\n  }\n\n  renderDashboardList() {\n    if (this.props.currentUser) {\n      if (this.currentUserProfile()) {\n        return (\n          <div className=\"controlPanel\">\n            <button id=\"books\" onClick={this.toggleShowBooks}>\n              Books <span className=\"bookCount\">{this.props.authoredBooks.length}</span>\n            </button>\n            <button id=\"favorites\" onClick={this.toggleShowFavorites}>\n              Favorites <span className=\"bookCount\">{this.props.favorites.length}</span>\n            </button>\n          </div>\n        );\n      }\n      return (\n        <div className=\"controlPanel\">\n          <button id=\"books\" onClick={this.toggleShowBooks}>\n            My Books <span className=\"bookCount\">{this.props.authoredBooks.length}</span>\n          </button>\n          <button id=\"favorites\" onClick={this.toggleShowFavorites}>\n            Favorites <span className=\"bookCount\">{this.props.favorites.length}</span>\n          </button>\n          <a href=\"/books/new\" title=\"Create a new book\">+</a>\n        </div>\n      );\n    }\n    return (\n      <div className=\"controlPanel\">\n        <button id=\"books\" onClick={this.toggleShowBooks}>\n          Books <span className=\"bookCount\">{this.props.authoredBooks.length}</span>\n        </button>\n        <button id=\"favorites\" onClick={this.toggleShowFavorites}>\n          Favorites <span className=\"bookCount\">{this.props.favorites.length}</span>\n        </button>\n      </div>\n    );\n  }\n\n  renderEditButton() {\n    if (this.props.currentUser) {\n      if (this.props.currentUser.id == this.props.userData.id) {\n        return (\n          <a className=\"editButton\" href=\"account/edit\">Edit</a>\n        );\n      }\n    }\n  }\n\n  renderUserContent() {\n    if (this.state.showingFavorites) {\n      return (\n        <div className=\"indexContent favorites\">\n         {this.renderDashboardList()}\n          <ul className=\"bookEntryList\">\n            {this.renderFavoriteBooks()}\n          </ul>\n        </div>\n      );\n    }\n    if (this.state.showingBooks) {\n      return (\n        <div className=\"indexContent books\">\n          {this.renderDashboardList()}\n          <ul className=\"bookEntryList\">\n            {this.renderAuthoredBooks()}\n          </ul>\n        </div>\n      );\n    }\n  }\n\n  renderBookLoader(){\n    if (this.state.requestMoreBooksSent) {\n      return(\n        <span className=\"bookLoader\">\n          <Progress/>\n        </span>\n      );\n    }\n  }\n\n  render() {\n    const createdDate = new Date(this.props.userData.created_at);\n    const createdYear = createdDate.getUTCFullYear();\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const createdMonth = months[createdDate.getMonth()];\n    const username = this.props.userData.username;\n\n    return (\n      <div className=\"container\">\n        <NavBar\n          currentUser={this.props.currentUser}\n          menu={this.props.menu}\n          logo={this.props.logo}\n          detail={this.props.detail}\n          search={this.props.search}\n        />\n        <span className=\"backgroundElement\" />\n        <div id=\"profile\">\n          <div className=\"userInformation\">\n            <div className=\"wrapper\">\n              <img src={`https://www.gravatar.com/avatar/${this.props.hashedEmail}?d=identicon&s=200`} width=\"200px\" height=\"200px\"/>\n              <span className=\"tooltip\">?</span>\n              <span className=\"details\">\n                <h2 className={username.length > 9 ? \"smallText\" : \"\"}>\n                  {username}\n                </h2>\n                <p>Joined {createdMonth} {createdYear}</p>\n                {this.renderEditButton()}\n              </span>\n            </div>\n            <div className=\"dashboard side\">\n              {this.renderUserContent()}\n            </div>\n          </div>\n          <div className=\"dashboard\">\n            <div className=\"indexContent\">\n              <div className=\"controlPanel\">\n                <p>Latest books</p>\n              </div>\n              <ul className=\"bookEntryList\" ref={ (divElement) => this.divElement = divElement} >\n                {this.renderAllBooks()}\n                {this.renderBookLoader()}\n              </ul>\n\n            </div>\n            {this.renderCreateBookButton()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfile.propTypes = {\n  books: React.PropTypes.arrayOf(React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    description: React.PropTypes.string,\n    id: React.PropTypes.number,\n    source_language: React.PropTypes.string,\n    target_language: React.PropTypes.string,\n    title: React.PropTypes.string,\n    user: React.PropTypes.shape({\n      created_at: React.PropTypes.string,\n      email: React.PropTypes.string,\n      favorite_books: React.PropTypes.array,\n      id: React.PropTypes.number,\n      username: React.PropTypes.string,\n    }),\n  })),\n  userData: React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    email: React.PropTypes.string,\n    favorite_books: React.PropTypes.array,\n    id: React.PropTypes.number,\n    username: React.PropTypes.string,\n  }),\n  cardinality: React.PropTypes.string,\n  authoredBooks: React.PropTypes.arrayOf(React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    description: React.PropTypes.string,\n    id: React.PropTypes.number,\n    source_language: React.PropTypes.string,\n    target_language: React.PropTypes.string,\n    title: React.PropTypes.string,\n    user: React.PropTypes.shape({\n      created_at: React.PropTypes.string,\n      email: React.PropTypes.string,\n      favorite_books: React.PropTypes.array,\n      id: React.PropTypes.number,\n      username: React.PropTypes.string,\n    }),\n  })),\n  favorites: React.PropTypes.arrayOf(React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    description: React.PropTypes.string,\n    id: React.PropTypes.number,\n    source_language: React.PropTypes.string,\n    target_language: React.PropTypes.string,\n    title: React.PropTypes.string,\n    user: React.PropTypes.shape({\n      created_at: React.PropTypes.string,\n      email: React.PropTypes.string,\n      favorite_books: React.PropTypes.array,\n      id: React.PropTypes.number,\n      username: React.PropTypes.string,\n    }),\n  })),\n  currentUser: React.PropTypes.shape({\n    created_at: React.PropTypes.string,\n    email: React.PropTypes.string,\n    favorite_books: React.PropTypes.array,\n    id: React.PropTypes.number,\n    username: React.PropTypes.string,\n  }),\n  menu: React.PropTypes.string,\n  logo: React.PropTypes.string,\n  detail: React.PropTypes.string,\n  search: React.PropTypes.string,\n  hashedEmail: React.PropTypes.string,\n};\n\n\n\n// WEBPACK FOOTER //\n// app/javascript/packs/react/Profile.es6.jsx"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7DA;;;AAEA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AAyBA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAtBA;AAwBA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAEA;AAFA;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;AADA;AAOA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AASA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAJA;AASA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAFA;AAOA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AADA;AAIA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAHA;AAWA;AAAA;AAAA;AACA;AADA;AAZA;AAgBA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAJA;AAUA;AAXA;AAjBA;AATA;AA0CA;;;;AA3UA;AACA;AA6UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAPA;AAeA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAjEA;;;;A","sourceRoot":""}